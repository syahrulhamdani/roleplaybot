name: Build and Deploy to Cloud Run
env:
  TAG: latest

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        project_id: ${{ vars.PROJECT_ID }}
        credentials_json: ${{ secrets.ARTIFACT_REGISTRY_SA }}
    - name: Configure Google Artifact Registry
      run: |
        gcloud auth configure-docker ${{ vars.REGION }}-docker.pkg.dev
    - name: Build and push Docker image
      id: build-push
      run: |
        IMAGE_NAME=${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.REPOSITORY }}/${{ vars.SERVER_IMAGE }}:$TAG
        docker build -t $IMAGE_NAME -f server/Dockerfile server/
        docker push $IMAGE_NAME

    outputs:
      image: ${{ steps.build-push.outputs.IMAGE_NAME }}

  deploy-to-cloud-run:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        project_id: ${{ vars.PROJECT_ID }}
        credentials_json: ${{ secrets.ARTIFACT_REGISTRY_SA }}
    - name: Configure Google Artifact Registry
      run: |
        gcloud auth configure-docker ${{ vars.REGION }}-docker.pkg.dev
    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ vars.SERVER_IMAGE }}
        region: ${{ vars.REGION }}
        image: ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.REPOSITORY }}/${{ vars.SERVER_IMAGE }}:latest
        timeout: "5m"
        flags: "--port=7860 --memory=2Gi --cpu=2 --service-account=athena-id@sea-id-aid-genai.iam.gserviceaccount.com"
        env_vars: |-
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          DAILY_API_KEY=${{ secrets.DAILY_API_KEY }}
          DATABASE_URL=postgresql+psycopg://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@${{ secrets.POSTGRES_HOST }}:5432/${{ secrets.POSTGRES_DB }}
          DATABASE_ECHO_OUTPUT=0
          DATABASE_USE_REFLECTION=0
          WEBAPP_PORT=7860
          WEBAPP_LOG_LEVEL=DEBUG
          BOT_LOG_LEVEL=DEBUG
          BOT_MAX_VOICE_SESSION_TIME=900
          MAX_PARTICIPANT_JOIN_SECONDS=300
          USE_CASE=voice-agent
          PROMPT_API_BASE_URL=${{ secrets.GENAI_CONSOLE_URL }}
          CONFIG_API_BASE_URL=${{ secrets.GENAI_CONSOLE_URL }}
          PROMPT_NAME=${{ vars.VOICE_PROMPT_NAME }}
          SCENARIO_PROMPT_NAME=${{ vars.SCENARIO_PROMPT_NAME }}
          ENV=prod
